var N=null,E="",T="t",U="u",searchIndex={};
var R=["publickey","algorithm","result","to_owned","clone_into","try_from","try_into","borrow_mut","borrow","type_id","privatekey","ordering","partial_cmp","formatter","PublicKey","PrivateKey"];

searchIndex["lamport_sigs"]={"doc":"lamport implements one-time hash-based signatures using…","i":[[3,R[14],"lamport_sigs","A one-time signing public key",N,N],[3,R[15],E,"A one-time signing private key",N,N],[11,"from_vec",E,"Intializes a public key with a byte vector. Returns `None`…",0,[[[R[1]],["vec",["u8"]],["u8"]],[["option",[R[0]]],[R[0]]]]],[11,"to_bytes",E,"Serializes a public key into a byte vector",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"verify_signature",E,"Verifies that the signature of the data is correctly…",0,[[["self"]],["bool"]]],[11,"new",E,"Generates a new random one-time signing key. This method…",1,[[[R[1]]],[R[10]]]],[11,"public_key",E,"Returns the public key associated with this private key",1,[[["self"]],[R[0]]]],[11,"sign",E,"Signs the data with the private key and returns the result…",1,[[["self"]],[["vec",["vec"]],[R[2],["vec","str"]],["str"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"],[T]]]],[11,R[5],E,E,0,[[[U]],[R[2]]]],[11,R[6],E,E,0,[[],[R[2]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],["typeid"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"],[T]]]],[11,R[5],E,E,1,[[[U]],[R[2]]]],[11,R[6],E,E,1,[[],[R[2]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],["typeid"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[10]]],["bool"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"clone",E,E,1,[[["self"]],[R[10]]]],[11,R[12],E,E,0,[[["self"],[R[0]]],[[R[11]],["option",[R[11]]]]]],[11,R[12],E,E,1,[[["self"],[R[10]]],[[R[11]],["option",[R[11]]]]]],[11,"cmp",E,E,0,[[["self"],[R[0]]],[R[11]]]],[11,"cmp",E,E,1,[[["self"],[R[10]]],[R[11]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"hash",E,E,0,[[["self"],["h"]]]]],"p":[[3,R[14]],[3,R[15]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);